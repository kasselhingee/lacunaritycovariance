
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(stationaryracsinference, quietly = TRUE)

spatstat 1.45-0       (nickname: 'One Lakh') 
For an introduction to spatstat, type 'beginner'

Note: R version 3.2.2 (2015-08-14) is more than 9 months old; we strongly recommend upgrading to the latest version
Warning message:
package 'spatstat' was built under R version 3.2.4 
> 
> #test units using a sine wave
> A <- matrix(cos((1:1000)/10),nrow=10,ncol=1000,byrow=TRUE)
> Aim <- im(A,xcol = (1:1000)/10, yrow = (1:10),
+ 			unitname=c("metre","metres"))
> fftA <- fft.im(Aim,padfactor=c(1,1))
> #plot(Re(fftA),axes=TRUE,clipwin=owin(xrange=c(-4,4),yrange=c(-5,5)))
> #The Fourier transform of cos(x) is infinite at theta = 1 (because integrating cos^2(x) out to infinity),
> # and 0 elsewhere. So result should be an image with units 1/m, with a single large peak at x=1 
> maxindex <- which(as.matrix(Re(fftA)==max(Re(fftA))), arr.ind=TRUE)
> abs(fftA$xcol[maxindex[2]]+1)<fftA$xstep
[1] TRUE
> abs(fftA$yrow[maxindex[1]]-0)<fftA$ystep
[1] TRUE
> 
> 
> #test height using a Gaussian
> gauss <- function(x,coeff=1){ return(exp(-coeff*x*x)) }
> 
> B <- matrix(gauss((-1000:1000)/10,coeff=4),nrow=10,ncol=2001,byrow=TRUE)
> Bim <- im(B,xcol = (-1000:1000)/10, yrow = 1:10,
+ 			unitname=c("metre","metres"))
> fftB <- fft.im(Bim,padfactor=c(1,1))
> #the result should approximate sqrt(pi/coeff)*exp(-t^2/4coeff) along the x-axis
> #At t=0 it is sqrt(pi/4)=0.8862269. However because the Gaussian is repeated 10 times (10 rows) 
> #the height should be 10*0.8862269
> abs(max(Re(fftB)) - 10*sqrt(pi/4)) < 1E-8
[1] TRUE
> 
> proc.time()
   user  system elapsed 
   1.29    0.34    1.62 
