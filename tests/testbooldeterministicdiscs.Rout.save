
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## tests for Boolean simulations of deterministic disc code
> 
> 
> suppressPackageStartupMessages(library(racssummfuncs))
> 
> #check that its producing the same pattern
> #Boolean model with discs of radius 10.
> #The intensity has been chosen such that the true coverage fraction is very close to 0.5.
> discr <- 10
> w <- owin(xrange=c(0,100),c(0,100))
> lambda <- 2.2064E-3
> xi <- rBooleanDetermDiscs(lambda,discr,w,seed=6549)
> coveragefrac(xi,w)
[1] 0.4644903
> 
> #theoretical coveragefrac
> truecoveragefrac <- booldetermdiscs_truecoveragefrac(lambda,discr)
> 
> ## thcovarDeterministicDiscs check
> thcovariance <- thcovarDeterministicDiscs(xrange=c(-100,100),yrange=c(-100,100),eps=c(1,1),0.0022064,10)
> 
> ## thspecdensAtOrigin check
> thspecdens_origin <- thspecdensAtOrigin(lambda,discr)
> thspecdens_origin
[1] 64.41312
> 
> ## use covariance to form an (approximate) confidence interval
> setcovB <- setcov(w)
> integrand <- eval.im((thcovariance-truecoveragefrac^2)*setcovB,harmonize = TRUE)
Warning message:
 the images 'thcovariance' and 'setcovB' were not compatible 
> exactvariance <- (1/(area.owin(w))^2)*sum(integrand)*integrand$xstep*integrand$ystep
> ##assume that window large enough that distribution of estimator is Gaussian
> ##the exact variance is as calculated. Below is a 0.05 conf interval
> confint0.05 <- c(qnorm(0.025, mean = truecoveragefrac, sd=sqrt(exactvariance)),
+                  qnorm(1-0.025, mean = truecoveragefrac, sd=sqrt(exactvariance)))
> 
> ##check that a randomly simulated value is in this range
> xi <- rBooleanDetermDiscs(lambda,discr,w)
> (coveragefrac(xi,w) < confint0.05[2]) & (coveragefrac(xi,w) > confint0.05[1])
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
   6.87    0.29    7.14 
