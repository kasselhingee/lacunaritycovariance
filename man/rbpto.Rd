% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rbpto.R
\name{rbpto}
\alias{rbpto}
\alias{bpto.coverageprob}
\alias{bpto.covar}
\title{Simulation of Boolean Model of Grains Scaled According to a Pareto Distribution}
\usage{
rbpto(lambda, grain, win, xm, alpha, seed = NULL, xy = NULL,
  lengthscales = 1:500)

bpto.coverageprob(lambda, grain, xm, alpha, lengthscales = 1:500)

bpto.covar(lambda, grain, xm, alpha, lengthscales = 1:500, xy)
}
\arguments{
\item{lambda}{Intensity of the germ process (which is a Poisson point process)}

\item{grain}{A single owin object that gives the shape and size of the grain at scale 1}

\item{win}{The window to simulate in (an owin object)}

\item{seed}{Optional input (default in NULL). Is an integer passed to \code{\link{base}{set.seed}}. Used to reproduce patterns exactly.}

\item{xy}{A raster object that specifies pixel coordinates of the final simulated binary map.
It is used the same way as \code{xy} is \code{\link{spatstat}{as.mask}} in spatstat.
If non-null then the computations will be performed using rasters. Otherwise if \code{grain} and \code{win} are polygonal then computations may be all polygonal.}
}
\value{
An owin object.
}
\details{
The parameters xm and alpha are such that the CDF of the Pareto distribuion is \eqn{P(s <= x) = 1 - (xm / x)^{alpha}}.
Approximates the grain distribution using the scales given by \code{lengthscales} and weighted by the probability distribution function of the Pareto distribution.
}
\section{Functions}{
\itemize{
\item \code{bpto.coverageprob}: The coverage probability of the Boolean model with scaled grains distributed according to Pareto distribution. Uses approximation of truncated length scales.

\item \code{bpto.covar}: The racs covariance of the Boolean model with scaled grains distributed according to Pareto distribution. 
Uses approximation of truncated length scales.
xy is required to specify resolution and offset of pixel grid
}}

\examples{
lambda <- 1
win <- square(r = 10)
#grain <- owin(xrange = c(-0.2, 0.2), yrange = c(-0.2, 0.2))
grain <- disc(r = 0.2)
xm <- 0.01
alpha <- 2

#system.time(xi <- rbpto(lambda, grain, win, xm, alpha, lengthscales = 1:100, xy = as.mask(win, eps = 0.1)))
system.time(xi <- rbpto(lambda, grain, win, xm, alpha, lengthscales = 1:100))
plot(xi)

bpto.coverageprob(lambda, grain, xm, alpha, lengthscales = 1:100)
covar <- bpto.covar(lambda, grain, xm, alpha, lengthscales = 1:100, xy = as.mask(win, eps = 0.1))
}
