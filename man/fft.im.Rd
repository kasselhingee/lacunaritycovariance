% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fft_im.R
\name{fft.im}
\alias{fft.im}
\title{Fast Fourier Transform of Images}
\usage{
fft.im(img, padfactor = c(1, 1))
}
\arguments{
\item{img}{input image. Can't contain any NA values}

\item{padfactor}{Optional argument to pad image with zeros and thus increase the spectral resolution (technically interpolation because no extra information is included) of the result.}
}
\value{
an image with correct spectral units and height of the spectral function for approximating a continuous Fourier transform.
}
\description{
Uses R's inbuilt FFT function it has addition machinery for returning corrects scales for approximating the continuous fourier transform
\deqn{
 f(z) = \int g(x) e^{i<x,z>} dx
}
where \eqn{<x,z>} is the standard spatial dot product: \eqn{<x,z> = \sum_{i=1}^d x_i z_i}.
}
\examples{
A <- matrix(cos((1:1000)/10),nrow=10,ncol=1000,byrow=TRUE)
Aim <- im(A,xcol = (1:1000)/10, yrow = (1:10),
			unitname=c("metre","metres"))
fftA <- fft.im(Aim,padfactor=c(1,1))
# plot(Re(fftA),axes=TRUE,clipwin=owin(xrange=c(-4,4),yrange=c(-5,5)))
# The Fourier transform of \\eqn{\\cos(x)} is infinite at \\eqn{\\theta} equal to 1 or -1,
# and and it is 0 elsewhere.
# So output fftA should be an image with units 1/m, with a single large peak at x=1.

}
