% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/owintosppolygons.R
\name{owin2Polygons}
\alias{owin2Polygons}
\alias{as.SpatialPolygons.tess}
\alias{as.SpatialPolygons.owin}
\alias{as.Polygon.owin}
\alias{as.Polygons.Polygon}
\alias{as.spdf.owin}
\title{convert owin polygons to an sp SpatialPolygonsDataFrame}
\usage{
owin2Polygons(x, id = "1")

as.SpatialPolygons.tess(x)

as.SpatialPolygons.owin(x)

as.Polygon.owin(owinpoly)

as.Polygons.Polygon(sppolygon, id = "NA")

as.spdf.owin(owinpolys, auxdata, idcolumn = NULL,
  proj4string = sp::CRS(as.character(NA)), match.ID = TRUE)
}
\arguments{
\item{x}{an owin object, or a spatstat tesselation object}

\item{id}{id correspond to polygons.}

\item{owinpoly}{is a polygonal or rectangular owin}

\item{sppolygon}{is a "Polygon" object for sp.}

\item{owinpolys}{is a list of owin polygons}

\item{auxdata}{dataframe of auxilary information for each polygon, must include an id column. Must have rows corresponding to each polygon.}

\item{idcolumn}{a character refering to the column to use for ids in auxdata. If none is supplied then uses rownames}

\item{proj4string}{Projection information see sp and rgdal for more detail}

\item{match.ID}{see help for \code{SpatialPolygonsDataFrame}. If TRUE check that row names of auxdata match to id possibly with rearrangement
If character match polygon ids with a particular column in auxdata}
}
\value{
\code{owin2Polygons} returns a single sp Polygons object (each owin might containg multiple polygonal boundaries)

an sp "Polygons" object from a single Polygon object and an id
}
\description{
functions for converting an owin polygon or rectangle to the sp polygon formats. This is useful for interfacing with rgdal and raster
}
\details{
\code{as.Polygon.owin} for converting owin objects to sp polygons without an projection information
}
\section{Functions}{
\itemize{
\item \code{as.SpatialPolygons.tess}: converts a tesselation to a list of Polygons

\item \code{as.SpatialPolygons.owin}: a wrapper of as.Polygons.owin that returns a "SpatialPolygons" object, but without any projection information

\item \code{as.Polygon.owin}: Kassel Hingee's original attempt to convert owins to Polygons - wont work for owin regions with boundaries that are multiple polygons

\item \code{as.Polygons.Polygon}: From a single sp \code{Polygon} object returns an sp \code{Polygons} object

\item \code{as.spdf.owin}: Returns a SpatialPolgyonsDataFrame given a list of owin polygons, ids and projection information
}}

\section{Note}{
 functions such \code{setAs()} seem much better than these current things. Also relies of owin polygons being single, closed polygons.
maptools has a function "as.SpatialPolygons.tess" in its source code (file spatstat1.R), but it doesn't seem to be exported (ie. I can't use it). **Try to work out why
}

\section{ToDo}{
 test if it works on owin regions with internal polygon boundaries
}

\examples{
data(polygontest)
tess <- quadrats(maptools::as.owin.SpatialPolygons(polygontest))
tilelist <- tiles(tess)
id <- data.frame(id = 1:length(tilelist),stringsAsFactors = FALSE)
tileauxdata <- data.frame(t(simplify2array(strsplit(names(tilelist), "[ , ]"))),stringsAsFactors=FALSE)
tileauxdata <- tileauxdata[,c(3,6)]
names(tileauxdata) <- c("TileRow", "TileCol")
tileauxdata$TileRow <- factor(tileauxdata$TileRow,ordered=TRUE) 
tileauxdata$TileCol <- factor(tileauxdata$TileCol,ordered=TRUE)
auxdata <- cbind(id,tileauxdata)

spdf1 <- as.spdf.owin(tilelist, tileauxdata, 
                     proj4string = sp::CRS(sp::proj4string(polygontest)), match.ID=FALSE)
                     
spdf2 <- sp::SpatialPolygonsDataFrame(as.SpatialPolygons.tess(tess), auxdata, match.ID = FALSE)
sp::proj4string(spdf2) <- sp::CRS(sp::proj4string(polygontest))

}
\seealso{
SpatialPolygonsDataFrame
}
